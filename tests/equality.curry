data X = A Int Int Int | B Int Int | C Int Int | D

arg1 a _ = a
arg2 _ b = b

makeA = A 1 2 3
makeB = B 1 2
makeC = C 1 2
makeD = D

main = 
    (A 1 2 3)          == (A 1 2 3)          &&
    (B 1 2)            == (B 1 2)            &&
    (C 1 2)            == (C 1 2)            &&
    D                  == D                  &&
    (A 1 2 3)          /= (B 1 2)            &&
    (B 1 2)            /= (C 1 2)            &&
    -- FWD
    makeA              == (arg1 makeA makeB) &&
    makeA              == (arg2 makeB makeA) &&
    (arg1 makeA makeB) == makeA              &&
    (arg1 makeA makeB) == (arg1 makeA makeB) &&
    (arg1 makeB makeC) /= (arg2 makeB makeC) &&
    -- CHOICE
    makeA              == (makeA ? makeA)    &&
    (makeA ? makeA)    == makeA              &&
    (makeA ? makeA)    == (makeA ? makeA)    &&
    makeB              /= (makeA ? makeC)    &&
    (makeA ? makeB)    /= (makeC ? makeD)    &&
    -- OPER
    makeA              == makeA              &&
    makeA              == (A 1 2 3)          &&
    (A 1 2 3)          == makeA              &&
    makeA              /= (B 1 2)            &&
    makeA              /= makeB              &&
    makeB              /= makeA              &&
    (A 1 2 3)          /= makeB              &&
    -- COMBOS
    (arg1 makeA makeB) == (makeA ? makeA)    &&
    True             ?
    -- FAIL
    failed == makeA  ?
    makeA  == failed ?
    failed == failed ?
    True






------ CORRECT ANSWER BELOW GENERATED BY cytest.py ------
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
--> True
