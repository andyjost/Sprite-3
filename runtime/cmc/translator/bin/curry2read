#!/bin/bash

THISDIR=`(cd \`dirname $0\` > /dev/null ; pwd)`
BASEDIR=`(cd $THISDIR/.. > /dev/null ; pwd)`

QUIET=''
if [ "$1" == "-q" ]
then
  QUIET='-q'
  shift
fi

if [ "$*" = "" ]
then
  echo `basename $0`: no input file. 1>&2
  exit 1
fi

LOCALLIBPATH=$BASEDIR/icurry:$BASEDIR
# export PAKCSLIBPATH
# echo PAKCSLIBPATH $PAKCSLIBPATH 1>&2

for i in $*
do
  FILE=$(dirname $i)/$(basename $i ".curry")
  if [ ! -f $FILE.curry ]
  then
    echo `basename $0`: \"$FILE.curry\" not found. 1>&2
    exit 1
  fi

  CURRYPATH=`pwd`/$(dirname $i):$LOCALLIBPATH
  # echo CURRYPATH $CURRYPATH 1>&2
  export CURRYPATH

  parsecurry --flat $QUIET $FILE
  if [ $? -ne 0 ]
  then
    echo `basename $0`: error parsing \"$FILE.curry\". 1>&2
    exit 1
  fi

# create ICurry

  TARGET=$(dirname $i)/.curry/$(basename $i ".curry")

    rm -f $FILE.icur $FILE.read $TARGET.icur $TARGET.read
    # command="pakcs $QUIET -r $BASEDIR/icurry/Main.curry $FILE"
    command="pakcs $QUIET :set args $FILE :load $BASEDIR/icurry/Main.curry :eval Main.main :quit"
    # The -q option to pakcs is not completely effective.
    if [ -n "$QUIET" ]
    then
      $command > /dev/null
    else
      $command
    fi
    # echo Running $command
    if [ -f $FILE.icur ]
    then
      mv -f $FILE.icur $TARGET.icur
      mv -f $FILE.read $TARGET.read
    else
      echo `basename $0`: failed to create \"$FILE.icur\". 2>&1
      exit 1
    fi

    # cat $TARGET.read

done

exit

