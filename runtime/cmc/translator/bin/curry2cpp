#!/bin/bash

# TODO: look in the compile script for a better way
THISDIR=`(cd \`dirname $0\` > /dev/null ; pwd)`
BASEDIR=`(cd $THISDIR/.. > /dev/null ; pwd)`

if [ "$1" = "" ]
then
  echo Warning: no file given
  exit
fi

# PAKCSLIBPATH=$PAKCSHOME/lib:$PAKCSHOME/lib/meta
# export PAKCSLIBPATH
# echo PAKCSLIBPATH $PAKCSLIBPATH

  FILE=$(dirname $1)/$(basename $1 ".curry")
  if [ ! -f $FILE.curry ]
  then
    echo Error: \"$FILE.curry\" not found
    exit
  fi

  parsecurry --flat $FILE
  if [ $? = 0 ]
     then echo parsed
     else echo parse error ; exit
  fi

# create ICurry

  TARGET=$(dirname $1)/.curry/$(basename $1 ".curry")

  if [ -f $TARGET.icur -a $TARGET.icur -nt $FILE.curry ]
  then
    echo \"icur\" up to date
  else
    rm -f $FILE.icur 
    CMCLIBPATH=$BASEDIR/icurry:$BASEDIR/format
    CURRYPATH=`pwd`/$(dirname $1):$CMCLIBPATH
    export CURRYPATH
    echo CURRYPATH $CURRYPATH
    # command="pakcs $FILE :load Main.curry :eval Main.main :quit"
    command="pakcs $FILE :load $BASEDIR/icurry/Main.curry :eval Main.main :quit"
    echo Running $command
    $command
    if [ -f $FILE.icur ]
    then echo \"icur\" file created
         mv -f $FILE.icur $TARGET.icur
         mv -f $FILE.read $TARGET.read
    else echo Fail to create  \"$FILE.icur\" file
         exit 1
    fi
  fi

  rm -f $FILE.*pp $TARGET.*pp
  CMCLIBPATH=$BASEDIR/backtrack:$BASEDIR/format:$BASEDIR/icurry
  CURRYPATH=`pwd`/$(dirname $1):$CMCLIBPATH
  export CURRYPATH
  echo CURRYPATH $CURRYPATH
  command="pakcs $TARGET :load $BASEDIR/backtrack/Main.curry :eval main :quit"
  echo Running $command
  $command
  if [ -f $TARGET.hpp -a -f $TARGET.cpp ]
  then echo \"C++\" files created
       exit 0
  else echo Fail to create  \"C++\" files 
       exit 1
  fi


